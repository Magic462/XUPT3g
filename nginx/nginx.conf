user root;
worker_processes auto;
# user nginx;

error_log /var/log/nginx/error.log error;  # 明确错误日志路径

events {
    worker_connections 1024;
}

http {
    client_body_buffer_size 128k;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # 全局关闭 access_log（如需后续挂载可开启）
    access_log off;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # 核心修复：禁用目录列表并设置默认文件
        autoindex off;
        location /assets {
        # 特别处理 React 和 antd 文件
        if ($request_uri ~* "(react|antd)-.+\.js$") {
            add_header Cache-Control "no-store";
        }
        }
        # 前端路由处理（Vue/React等SPA必需）
        location / {
            try_files $uri $uri/ /index.html;
            # 安全头设置
            add_header X-Content-Type-Options "nosniff";
            add_header X-Frame-Options "DENY";
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        # 静态资源处理（带缓存）
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff2)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;  # 减少日志噪音
            # 关键修复：禁用严格检查
            try_files $uri =404;
        }

        # API代理（关键修改：添加WebSocket支持）
        location /api {
        # 关键修改：添加代理头和处理路径
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # 处理跨域
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,Content-Type';
        
        # 重试机制
        proxy_next_upstream error timeout http_502;
        }

        # 静态资源代理：将 /res 请求转发到后端服务
        location /res {
            proxy_pass http://backend:8080;  # 后端 Go 服务地址
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # 可选：减少缓存问题
            add_header Cache-Control "no-store";

            # 防止某些图片类型返回失败（可根据情况开启）
            proxy_buffering off;
        }

        # 安全防护
        location ~ /\.(?!well-known).* {  # 允许Let's Encrypt验证
            deny all;
            return 404;
        }

        # 错误页面处理
        error_page 404 /index.html;  # SPA应用统一返回index.html
        error_page 500 502 503 504 /50x.html;
    }
}